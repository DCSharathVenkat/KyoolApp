pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://www.jitpack.io' }
        maven { url("$rootDir/../node_modules/react-native/android") }
        maven { url("$rootDir/../node_modules/expo-modules-core/android") }
        maven { url("$rootDir/../node_modules/expo-modules-autolinking/android") }
    }

    // React Native Gradle plugin include
    def reactNativeGradlePluginDir = new File(
        providers.exec {
            workingDir(rootDir)
            commandLine("node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })")
        }.standardOutput.asText.get().trim()
    ).getParentFile().absolutePath
    includeBuild(reactNativeGradlePluginDir)

    // Expo autolinking plugin include
    def expoAutolinkingPluginDir = new File(
        providers.exec {
            workingDir(rootDir)
            commandLine("node", "--print", "require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })")
        }.standardOutput.asText.get().trim()
    ).getParentFile().absolutePath + "/android/expo-gradle-plugin"
    includeBuild(expoAutolinkingPluginDir)
}

plugins {
    id("com.facebook.react.settings")
    id("expo-autolinking-settings")  
}

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
    if (System.getenv("EXPO_USE_COMMUNITY_AUTOLINKING") == "1") {
        ex.autolinkLibrariesFromCommand()
    } else {
        ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)
    }
}

expoAutolinking {
  useExpoModules()
  useExpoVersionCatalog()
}

rootProject.name = "KyoolApp"

include(":app")
includeBuild('../node_modules/@react-native/gradle-plugin')
includeBuild("../node_modules/expo-modules-autolinking/android/expo-gradle-plugin")